// Copyright 2020 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package p

type (
	T(type _) struct{}
	S(type _) struct {
		data T(*T(int))
	}
)

func _() {
	_ = S(int){
		data: T(*T(int)){},
	}
}

// full test case from issue

type (
	Element(type TElem) struct{}

	entry(type K comparable) struct{}

	Cache(type K comparable) struct {
		data map[K]*Element(*entry(K))
	}
)

func _() {
	_ = Cache(int){
		data: make(map[int](*Element(*entry(int)))),
	}
}
