package main

import "fmt"

type NumberString interface {
	type int, int8, int16, int32, int64, 
	uint, uint16, uint32, uint64, 
	float32, float64, complex64, complex128, 
	byte, uintptr, string
}

type Monoid<type A> interface {
	Combine(x A, y A) A
}

type Concat<type A NumberString> struct{}

func (c Concat<A>) Combine(x A, y A) A {
	return x + y
}

func main() {
	c := Concat<int>{}
	fmt.Println(c)
	fmt.Println(c.Combine(1, 2))
	c2 := Concat<string>{}
	fmt.Println(c2.Combine("hello ", "world!"))
	c3 := Concat<int>{}
	fmt.Println(c3.Combine(10, 20))
}
